@page
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model CreateShipmentModel
@{
    ViewData["Title"] = "Create Shipment";
}

<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Select2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <!-- Select2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <style>
       @@media print {
    /* Hide everything by default */
    body * {
        visibility: hidden;
    }

    /* Show only the print-section */
    .print-section, .print-section * {
        visibility: visible;
    }

    /* Hide the print button */
    .no-print {
        display: none !important;
    }

    /* Ensure the print-section is positioned correctly */
    .print-section {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        padding: 0; /* Remove extra padding */
        margin: 0; /* Remove extra margin */
        font-family: Arial, sans-serif;
    }

    /* Optional: Add borders and spacing for a clean look */
    .print-section h3 {
        margin-bottom: 10px;
        border-bottom: 1px solid #000;
        padding-bottom: 5px;
    }

    .print-section table {
        width: 100%;
        border-collapse: collapse; /* Ensure no extra spacing between table cells */
    }

    .print-section th, .print-section td {
        border: 1px solid #000;
        padding: 5px; /* Adjust padding for compactness */
        text-align: left;
    }

    /* Ensure the page size fits within a single page */
    @@page {
        size: auto; /* Use the default page size */
        margin: 10mm; /* Adjust margins to fit content */
    }
}

    </style>

</head>


<h1 class="text-center my-4">બિલ્ટી બનાવો</h1>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container bg-light shadow p-4 rounded">
    <form method="post" class="row g-3">
        <!-- Existing fields -->
        <div class="row">
            <div class="col-md-4">
                <label for="City" class="form-label text-primary">
                    <i class="fas fa-city"></i> ગામ
                </label>
                <select id="City" name="Shipment.city" class="form-select" onchange="onCityChange()" required>
                    <option value="" disabled selected>Choose City</option>
                    @foreach (var city in Model.Cities)
                    {
                        <option value="@city">@city</option>
                    }
                </select>
            </div>
            <div class="col-md-4">
                <label for="ReceiverId" class="form-label text-primary">
                    <i class="fas fa-user"></i> લેનાર નું નામ
                </label>
                <select id="ReceiverId" name="Shipment.ReceiverId" class="form-select receiver-select" required>
                    <option value="" disabled selected>Choose Receiver</option>
                    @foreach (var receiver in Model.Receivers)
                    {
                        <option value="@receiver.Id">@receiver.Name</option>
                    }
                </select>
            </div>

            <div class="col-md-4 d-flex align-items-end">
                <!-- Example: Create New Receiver button -->
                <a href="/DataEntry/Create" class="btn btn-outline-primary w-100">
					<i class="fas fa-plus"></i> લેનાર નુ નામ ઉમેરો
                </a>
            </div>
        </div>


        <div class="row">
            <div class="col-md-4">
                <label for="BookingOffice" class="form-label text-primary">
                    <i class="fas fa-building"></i> બુકિંગ ઓફિસ
                </label>
                <select id="BookingOffice" name="Shipment.BookingOffice" class="form-select" required>
                    <option value="" disabled selected>Choose Booking Office</option>
                    @foreach (var office in Model.BookingOffices)
                    {
                        <option value="@office">@office</option>
                    }
                </select>
            </div>
            <div class="col-md-4">
                <label for="SenderId" class="form-label text-primary">
                    <i class="fas fa-user"></i> મોકલનાર નું નામ
                </label>
                <select id="SenderId" name="Shipment.SenderId" class="form-select sender-select" required>
                    <option value="" disabled selected>Choose Sender</option>
                    @foreach (var sender in Model.Senders)
                    {
                        <option value="@sender.Id">@sender.Name</option>
                    }
                </select>
            </div>
            <div class="col-md-4 d-flex align-items-end">
                <!-- Example: Create New Receiver button -->
                <a href="/Sender/Create" class="btn btn-outline-primary w-100">
                    <i class="fas fa-plus"></i> મોકલનાર નુ નામ ઉમેરો
                </a>
            </div>
        </div>


        <div class="row">
       
            <div class="col-md-4">
                <label for="NumberOfItems" class="form-label text-primary">
                    <i class="fas fa-box"></i> દાગીના
                </label>
                <input type="number" class="form-control" id="NumberOfItems" name="Shipment.NumberOfItems" required />
            </div>
            <div class="col-md-4">
                <label for="TotalWeight" class="form-label text-primary">
                    <i class="fas fa-weight-hanging"></i>વજન (kg)
                </label>
                <input type="number" step="0.01" class="form-control" id="TotalWeight" name="Shipment.TotalWeight" required />
            </div>
            <div class="col-md-4">
                <label for="Description" class="form-label text-primary">
                    <i class="fas fa-info-circle"></i>
                    વિગત
                </label>
                <textarea class="form-control" id="Description" name="Shipment.Description" rows="3" required></textarea>
            </div>
        </div>
       
        <div class="col-md-4">
            <label class="form-label text-primary">
                <i class="fas fa-money-bill"></i> Payment Type
            </label>
            <div class="form-check">
                <input class="form-check-input" type="radio" id="Paid" name="Shipment.PaymentStatus" value="Paid" required />
                <label class="form-check-label" for="Paid">Paid</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" id="ToBeBilled" name="Shipment.PaymentStatus" value="ToBeBilled" required />
                <label class="form-check-label" for="ToBeBilled">To be Billed</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" id="ToPay" name="Shipment.PaymentStatus" value="ToPay" required />
                <label class="form-check-label" for="ToPay">To Pay</label>
            </div>
        </div>
        <div class="col-md-2">
            <label for="Price" class="form-label text-primary">
                <i class="fas fa-indian-rupee-sign"></i> ભાડું
            </label>
            <input type="number" step="0.01" class="form-control" id="Price" name="Shipment.Price" disabled />
        </div>

       
        <input type="hidden" id="CreatedBy" name="Shipment.CreatedBy" value="@HttpContext.Session.GetString("Username")" />


        <!-- Buttons Section -->
        <!--<div class="col-12 d-flex justify-content-between">
            <a asp-page="/Index" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Back to Home
            </a>
            <button type="submit" class="btn btn-success">
                <i class="fas fa-paper-plane"></i> Submit
            </button>
        </div> Buttons Section -->

        <div class="col-12 text-center">
            <div class="d-flex justify-content-center gap-3">
                <!-- Assign Button -->
                <button type="submit" class="btn btn-success btn-lg d-flex align-items-center justify-content-center">
                    <i class="fas fa-paper-plane me-2"></i> Submit
                </button>

                <!-- Cancel Button -->
                <a href="/" class="btn btn-secondary btn-lg d-flex align-items-center justify-content-center">
                    <i class="fas fa-arrow-left me-2"></i> Back to Home
                </a>
            </div>
        </div>

    </form>
  
    @if (Model.Shipment != null && Model.Shipment.Id > 0)
    {
        <div id="print-section" class="mt-4 p-4 border rounded bg-white print-section">
            
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <th>Number</th>
                        <td colspan="2">@Model.Shipment.Id</td>

                        <th>Date</th>
                        <td colspan="2" align="center">@Model.Shipment.ShipmentDateTime.ToString("dd-MM-yyyy")</td>
                    </tr>
                    <tr>
                        <th>Sender Name</th>
                        <td >@Model.Shipment.SenderName</td>
                                         
                        <th>Receiver Name</th>
                        <td colspan="2">@Model.Shipment.ReceiverName</td>
                    </tr>
                    <tr>
                        <th>To City</th>
                        <td>@Model.Shipment.City</td>
                    </tr>
                    <tr>
                        <th>Number of Items</th>
                        <td>@Model.Shipment.NumberOfItems</td>
                        <th>Weight</th>
                        <td>@Model.Shipment.TotalWeight Kg</td>
                        <th>Description</th>
                        <td>@Model.Shipment.Description</td>
                    </tr>
                    <tr>
                        <th>Amount</th>
                        <td>&#8377; @Model.Shipment.Price</td>
                        <th>Payment Type</th>
                        <td>@Model.Shipment.PaymentStatus</td>

                    </tr>
                </tbody>
            </table>
            <div class="text-center mt-3">
                <button type="button" class="btn btn-secondary no-print" onclick="printShipmentDetails()"><i class="fas fa-print"></i> Print</button>
            </div>
        </div>
    }

    
</div>
<script>

      document.addEventListener('DOMContentLoaded', function () {
        const paidRadio = document.getElementById('Paid');
        const toBeBilledRadio = document.getElementById('ToBeBilled');
        const toPayRadio = document.getElementById('ToPay');
        const priceField = document.getElementById('Price');

        function togglePriceField() {
            if (paidRadio.checked) {
                priceField.disabled = false;
                priceField.required = true; // Make the field required
            } else if (toBeBilledRadio.checked){
                priceField.disabled = false;
                priceField.required = true; // Remove the required attribute
                
            } else {
                priceField.disabled = true;
                priceField.required = false; // Remove the required attribute
                priceField.value = ''; // Clear the value
            }
        }

        // Attach event listeners to the radio buttons
        paidRadio.addEventListener('change', togglePriceField);
        toBeBilledRadio.addEventListener('change', togglePriceField);
        toPayRadio.addEventListener('change', togglePriceField);

        // Initialize the state on page load
        togglePriceField();
    });

    function printShipmentDetails() {
        // Save the current page content
        const originalContent = document.body.innerHTML;
        const printSection = document.getElementById('print-section');
        window.document.body.innerHTML = printSection.outerHTML; // Set the body to the print section content
        window.print();
         // Restore the original page content
        document.body.innerHTML = originalContent;

        // Reload the scripts and styles
        //window.location.reload();

        // Replace the current history state to prevent form resubmission
        window.history.replaceState(null, null, window.location.href);

    }
    function onCityChange() {
        var city = document.getElementById('City').value;
        var receiverSelect = document.getElementById('ReceiverId');
        receiverSelect.innerHTML = '<option value="">Loading...</option>';

        // Use the correct path for your handler
    // Correct: use 'city' as the parameter name
       var url = '/Shipment/Create?handler=ReceiversByCity&city=' + encodeURIComponent(city);



        fetch(url)
            .then(response => {
                if (!response.ok) throw new Error("Network response was not ok");
                return response.json();
            })
            .then(data => {
                receiverSelect.innerHTML = '<option value="" disabled selected>Choose Receiver</option>';
                data.forEach(function (receiver) {
                    var option = document.createElement('option');
                    option.value = receiver.id;
                    option.text = receiver.name;
                    receiverSelect.appendChild(option);
                });
            })
            .catch(error => {
                receiverSelect.innerHTML = '<option value="">No receivers found</option>';
                //console.error('Fetch error:', error);
            });
    }
    $(document).ready(function () {
        $('#SenderId').select2({
            placeholder: "Choose or search sender",
            allowClear: true,
            width: '100%'
        });
        $('#ReceiverId').select2({
            placeholder: "Choose or search receiver",
            allowClear: true,
            width: '100%'
        });
    });



</script>